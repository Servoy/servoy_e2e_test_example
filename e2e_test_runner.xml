<?xml version="1.0"?>

<project name="test_runner" default="run_war_solution_tests" basedir=".">

	<!-- Set up used properties/paths -->
	<property name="e2etests.dir" value="e2e" />
	<property name="e2etests.results.dir" value="${e2etests.dir}/testResults" /> <!-- protractor and selenese will generate junit xml result files there -->
	<property name="e2etests.servoy_user_home.dir" value="${e2etests.dir}/servoy_user_home" /> <!-- war deployments log files will be generated here -->
	<property name="e2e.tomcat.dir" value="apache-tomcat-8.0.32" />
	<property name="e2e.ant-contrib-jar-location" value="ant-contrib/ant-contrib-1.0b3.jar" />
	<property name="e2e.tomcat.manager_url" value="http://localhost:8083/manager/text" />
	<property name="e2e.tomcat.username" value="tomcat" />
	<property name="e2e.tomcat.password" value="tomcat@servoy" />
	
	<path id="catalina-ant-classpath">
		<fileset dir="${e2e.tomcat.dir}/lib">
			<include name="catalina-ant.jar"/>
			<include name="tomcat-coyote.jar"/>
			<include name="tomcat-util.jar"/>
		</fileset>
		<fileset dir="${e2e.tomcat.dir}/bin">
			<include name="tomcat-juli.jar"/>
		</fileset>
	</path>
	<property name="absolute.path" location="."/>

	<!-- Configure ant-contrib tasks and the tomcat provided Ant tasks for the Tomcat Manager application -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${e2e.ant-contrib-jar-location}" />
		</classpath>
	</taskdef>
	<taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask" classpathref="catalina-ant-classpath"/>
	<taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask" classpathref="catalina-ant-classpath"/>

	<target name="run_war_solution_tests" depends="export_war_solutions, prepare_export_log, run_e2e_tests"/>
	
	<target name="load_properties">
		<property file="test_runner.properties"/>
	</target>

	<target name="export_war_solutions" depends="load_properties, clean_exports">
		<export-solutions-as-war solutionNames="${solutions_to_export_as_war_tests}" outputDir="${servoy.test.target-exports.war}"/>
	</target>

	<target name="run_e2e_tests" depends="load_properties, clean_test_results">
		<copy file="${e2etests.dir}/protractor.config.js.template" toFile="${e2etests.dir}/protractor.config.js" overwrite="true">
			<filterset>
				<filter token="{sauceUserPlaceholder}"                   value="${sauceUserPlaceholder}"/>
				<filter token="{sauceKeyPlaceholder}"                    value="${sauceKeyPlaceholder}"/>
			</filterset>
		</copy>

		<trycatch>
			<try>
				<echo level="info" message="Trying to stop any previously started tomcat that was left behind unintentionally (if any)."/>
				<tomcat-stop/>

				<tomcat-start/>
				<sleep seconds="10"/>
				<for list="${solutions_to_export_as_war_tests}" param="solution.name">
					<sequential>
						<trycatch property="antException1">
							<try>
								<echotimestamp />

								<echo level="info" message="Deploying @{solution.name}..."/>
								<deploy url="${e2e.tomcat.manager_url}" username="${e2e.tomcat.username}" password="${e2e.tomcat.password}"
									path="/@{solution.name}" localWar="${absolute.path}/${servoy.test.target-exports.war}/@{solution.name}.war"/>

								<echo level="info" message="Deployment done. Waiting a bit (10 sec) for things to be stable..."/>
								<!-- shouldn't the deploy task wait itself until it is ready to use?! I guess it doesn't wait enough... -->
								<sleep seconds="10"/>
								
								<echo level="info" message="Running e2e tests for this solution..."/>
								<echotimestamp />
								<ant antfile="build.xml" target="run_all_tests" dir="${e2etests.dir}">
									<property name="solution.name" value="@{solution.name}"/>
								</ant>
								<echo level="info" message="Tests finished for this solution."/>
								<echotimestamp />
							</try>
							<catch>
								<echo level="error" message="Tests FAILED OR ERROR caught when deploying/testing solution @{solution.name}: ${antException1}"/>
							</catch>
							<finally>
								<trycatch property="antException2">
									<try>
										<undeploy url="${e2e.tomcat.manager_url}" username="${e2e.tomcat.username}" password="${e2e.tomcat.password}"
											path="/@{solution.name}"/>
									</try>
									<catch>
										<echo level="error" message="Undeploy FAILED for solution @{solution.name}: ${antException2}"/>
									</catch>
									<finally>
										<echo level="info" message="Appending war app. server log to concatted artifact log..."/>
										
										<!-- now append this war's app server log file to the others to have nice logs -->
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true"/>
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true" message="------------------------------- Starting to test @{solutionName} -------------------------------"></echo>
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true"/>
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true"/>
										<concat destfile="${log.dir}/war_test_run_logs_concatted.txt" append="true">
											<filelist dir="${e2etests.servoy_user_home.dir}/.servoy/server/@{solutionName}" files="servoy_log.txt"/>
										</concat>
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true"/>
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true" message="------------------------------- Finished testing @{solutionName} -------------------------------"></echo>
										<echo file="${log.dir}/war_test_run_logs_concatted.txt" append="true"/>

										<!-- Rename junit results file so that it doesn't get overwritten by any following solution -->
										<move file="${e2etests.results.dir}/junitresults.xml" tofile="${e2etests.results.dir}/junitresults_@{solution.name}.xml"/>

										<echo level="info" message="Sleeping for 10 more seconds to fix another problem that sometimes appeared with deploy/undeploy..."/>
										<sleep seconds="10"/>
										<!-- trying to fix a following deploy failing for last solution (no solution available for 90 sec followed by timeout and the following error when trying to undeploy:  "[undeploy] FAIL - The application [/test_xyz] is already being serviced") -->
									</finally>
								</trycatch>
							</finally>
						</trycatch>
					</sequential>
				</for>
			</try>
			<finally>
				<tomcat-stop/>
			</finally>
		</trycatch>
		<fail if="antException1" message="FAILED: Test deploy/execution failed for one of the test solutions; see messages above."/>
		<fail if="antException2" message="FAILED: Undeploy failed for one of the test solutions; see messages above."/>
	</target>

	<macrodef name="tomcat-start" >
		<sequential>
			<echo level="info" message="Starting Tomcat"/>
			<echo level="info" message="Using as JAVA_HOME: ${java_home_tomcat}."/>
			<property environment="environment_v" />
			<echo>
        		Old values (will be ignored)
        	        JAVA_OPTS = ${environment_v.JAVA_OPTS} (before running Tomcat).
        	        CATALINA_OPTS = ${environment_v.CATALINA_OPTS} (before running Tomcat).
        	</echo>
            <property name="absoluteServoyUserHome" location="${e2etests.servoy_user_home.dir}" />
        	<echo level="info" message="Using as SERVOY_USER_HOME: ${absoluteServoyUserHome}"></echo>

			<property name="absolute.tomcat" location="${e2e.tomcat.dir}"/>
        	<echo level="info" message="Using tomcat installed at: ${absolute.tomcat}"></echo>
			
			<exec dir="${e2e.tomcat.dir}/bin" executable="sh" osfamily="unix" newenvironment="true" failonerror="true">
				<env key="JAVA_HOME" value="${java_home_tomcat}"/>
				<env key="CATALINA_BASE" value="${absolute.tomcat}"/>
				<env key="CATALINA_HOME" value="${absolute.tomcat}"/>
				<env key="CATALINA_OPTS" value="-Xmx2g -XX:MaxPermSize=512m -Xms512m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled"/>
				<env key="JAVA_OPTS" value="-DSERVOY_USER_HOME=${absoluteServoyUserHome}"/><!-- this will make war deployments write their log files in results dir / .servoy / ... -->
				<arg line="catalina.sh"/>
				<arg line="start"/>
			</exec>
			<exec dir="${e2e.tomcat.dir}/bin" executable="cmd" osfamily="windows" newenvironment="true" failonerror="true">
				<env key="JAVA_HOME" value="${java_home_tomcat}"/>
				<env key="CATALINA_BASE" value="${absolute.tomcat}"/>
				<env key="CATALINA_HOME" value="${absolute.tomcat}"/>
				<env key="CATALINA_OPTS" value="-Xmx2g -XX:MaxPermSize=512m -Xms512m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled"/>
				<env key="JAVA_OPTS" value="-DSERVOY_USER_HOME=${absoluteServoyUserHome}"/><!-- this will make war deployments write their log files in results dir / .servoy / ... -->
				<arg line="/C catalina.bat start"/>
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="tomcat-stop">
		<sequential>
			<echo level="info" message="Stopping Tomcat"/>
			<property name="absolute.tomcat" location="${e2e.tomcat.dir}"/>
        	<echo level="info" message="Using tomcat installed at: ${absolute.tomcat}"></echo>
			
			<exec dir="${e2e.tomcat.dir}/bin" executable="sh" osfamily="unix" failonerror="true">
				<env key="JAVA_HOME" value="${java_home_tomcat}"/>
				<env key="CATALINA_BASE" value="${absolute.tomcat}"/>
				<env key="CATALINA_HOME" value="${absolute.tomcat}"/>
				<arg line="catalina.sh"/>
				<arg line="stop"/>
				<arg line="9"/>
				<!-- wait for it to close timeout in seconds larger then default 5 -->
				<arg line="-force"/>
				<!-- force -KILL if it still didn't close -->
			</exec>
			<exec dir="${e2e.tomcat.dir}/bin" executable="cmd" osfamily="windows" newenvironment="true" failonerror="true">
				<env key="JAVA_HOME" value="${java_home_tomcat}"/>
				<env key="CATALINA_BASE" value="${absolute.tomcat}"/>
				<env key="CATALINA_HOME" value="${absolute.tomcat}"/>
				<arg line="/C catalina.bat stop 9 -force"/>
			</exec>
			
			<echo level="info" message="Tomcat stopped; waiting for 2 seconds."/>
			<sleep seconds="2"/>
		</sequential>
	</macrodef>

	<target name="prepare_export_log">
		<move file="servoy_log.txt" tofile="${log.dir}/workspace_exporter_app_server_log.txt" failonerror="false"/>
		<move file="${test.workspace.dir}/.metadata/.log" tofile="${log.dir}/workspace_exporter_workspace_log.txt" failonerror="false"/>
	</target>


	<macrodef name="export-solutions-as-war">
		<attribute name="solutionNames"/>
		<attribute name="outputDir"/>
		<sequential>
			<!-- store path to newest Eclipse launcher JAR in path id 'newest.equinox.launcher.path.id' -->
			<!-- and turn the path into a property -->
			<latest_jar pathName="equinox.launcher.jar.location" dir="${servoy_install.developer}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar"/>

			<!-- now we are ready to start the workspace exporter -->
			<echo level="info" message="Using application_server dir: ${servoy_install.app_server_dir}"/>
			<echo level="info" message="Using developer          dir: ${servoy_install.developer}"/>
			<echo level="info" message="Using equinox launcher   jar: ${equinox.launcher.jar.location_property}" />
			<echo level="info" message="Using pluginLocations    dir: ${servoy_install.developer}/plugins/" />
			<echo level="info" message="Using workspace          dir: ${test.workspace.dir}" />
			
			<java   classname="org.eclipse.equinox.launcher.Main"
                	classpathref="equinox.launcher.jar.location"
                	failonerror="true"
                	fork="true">
				<jvmarg value="-Xms40m" />
				<jvmarg value="-Xmx512m" />
				<jvmarg value="-XX:MaxPermSize=256M" />
				<jvmarg value="-Dosgi.configuration.cascaded=false" />
				<jvmarg value="-Dservoy.application_server.dir=${servoy_install.app_server_dir}" />
				<!--jvmarg value="-Xdebug" />
            	<jvmarg value="-Xrunjdwp:transport=dt_socket,address=1000,server=y,suspend=y" /-->

				<arg value="-application" />
				<arg value="com.servoy.eclipse.exporter.war.application" />

				<arg value="-data" />
				<arg value="${test.workspace.dir}" />
				<arg value="-s" />
				<arg value="@{solutionNames}" />
				<arg value="-o" />
				<arg value="@{outputDir}" />
				<arg value="-as" />
				<arg value="${servoy_install.app_server_dir}" />
				<arg value="-dbi" />
				<arg value="-pluginLocations" />
				<arg value="${servoy_install.developer}/plugins/" />
				<arg value="-p" />
				<arg value="${servoy_test_properties}" />
        		<arg value="-i18n" />
				<!-- add here any of the optional arguments supported by the exporter; see 'export -help' for more info; for example: -->
				<!--<arg value="-help" />-->
				<arg value="-verbose" />
				<!--<arg value="-ie" /> -->
			</java>
		</sequential>
	</macrodef>

	<macrodef name="make-clean-dir">
		<attribute name="dir"/>
		<sequential>
			<delete dir="@{dir}" quiet="true"/>
			<mkdir dir="@{dir}"/>
		</sequential>
	</macrodef>

	<target name="clean_exports">
		<echo level="verbose">
            *** Cleaning exports ***
        </echo>
		<make-clean-dir dir="${log.dir}" />
		<make-clean-dir dir="${servoy.test.target-exports.war}" />
		<delete file="servoy_log.txt" quiet="true"/>
		<!-- exporter produces this -->
		<!-- also delete the workspace log file -->
		<delete failonerror="false" file="${test.workspace.dir}/.metadata/.log" quiet="true"/>
	</target>

	<target name="clean_test_results">
		<echo level="verbose">
            *** Cleaning test results ***
        </echo>
		<make-clean-dir dir="${log.dir}" />
		<delete includeemptydirs="true" failonerror="no">
			<fileset file="junit*.properties"/>
		</delete>
		
		<make-clean-dir dir="${e2etests.servoy_user_home.dir}" />
		<make-clean-dir dir="${e2etests.results.dir}" />
	</target>

	<macrodef name="echotimestamp">
		<sequential>
			<local name="timestamp" />
			<tstamp>
				<format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss" />
			</tstamp>
			<echo message="${timestamp}" />
		</sequential>
	</macrodef>

	<macrodef name="latest_jar">
		<attribute name="pathName"/>
		<attribute name="propertyName" default="@{pathName}_property"/>
		<attribute name="dir"/>
		<attribute name="includes"/>
		<sequential>
			<!-- store path to newest JAR -->
			<path id="@{pathName}">
				<first count="1">
					<sort>
						<fileset dir="@{dir}" includes="@{includes}" />
						<reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
							<date />
						</reverse>
					</sort>
				</first>
			</path>

			<!-- create a property as well -->
			<property name="@{propertyName}" refid="@{pathName}" />
		</sequential>
	</macrodef>

</project>
